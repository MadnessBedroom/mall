// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/google/wire"
	"github.com/kalougata/mall/api/v1/admin"
	"github.com/kalougata/mall/api/v1/mall"
	"github.com/kalougata/mall/controller/admin"
	"github.com/kalougata/mall/pkg/app"
	"github.com/kalougata/mall/pkg/data"
	"github.com/kalougata/mall/repo/admin"
	"github.com/kalougata/mall/router/admin"
	"github.com/kalougata/mall/router/mall"
	"github.com/kalougata/mall/service/admin"
	"github.com/spf13/viper"
)

// Injectors from wire.go:

func NewApp(config *viper.Viper) (*app.Server, func(), error) {
	dataData, cleanup, err := data.NewData(config)
	if err != nil {
		return nil, nil, err
	}
	umsAdminRepo := adminrepo.NewUmsAdminRepo(dataData)
	umsAdminService := adminsrv.NewUmsAdminService(umsAdminRepo, config)
	umsAdminController := adminctrl.NewUmsAdminController(umsAdminService)
	umsRoleRepo := adminrepo.NewUmsRoleRepo(dataData)
	umsRoleService := adminsrv.NewUmsRoleService(umsRoleRepo)
	umsRoleController := adminctrl.NewUmsRoleController(umsRoleService)
	adminAPIRouter := adminv1.NewAdminAPIRouter(umsAdminController, umsRoleController)
	adminHTTPServer := adminrouter.NewAdminHTTPServer(adminAPIRouter)
	mallAPIRouter := mallv1.NewMallAPIRouter()
	mallHTTPServer := mallrouter.NewMallHTTPServer(mallAPIRouter)
	server := app.NewServer(adminHTTPServer, mallHTTPServer)
	return server, func() {
		cleanup()
	}, nil
}

// wire.go:

var AdminProvider = wire.NewSet(adminrepo.NewUmsAdminRepo, adminrepo.NewUmsRoleRepo, adminsrv.NewUmsAdminService, adminsrv.NewUmsRoleService, adminctrl.NewUmsAdminController, adminctrl.NewUmsRoleController, adminv1.NewAdminAPIRouter, adminrouter.NewAdminHTTPServer)

var MallProvider = wire.NewSet(mallv1.NewMallAPIRouter, mallrouter.NewMallHTTPServer)
